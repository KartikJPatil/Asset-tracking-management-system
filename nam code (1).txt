******************static and dynamic**********************
#Simulation program to genrate coneection oriented and connectionless trafic over given network which uses static and dynamic routing. 

#Create a simulator object
set ns [new Simulator]
#Open the Trace file
set nr [open apsit.tr w]
$ns trace-all $nr
#Open the NAM trace file
set nf [open apsit.nam w]
$ns namtrace-all $nf
#Define a 'finish' procedure
        proc finish { } {
        global ns nr nf
        $ns flush-trace
        close $nf
        close $nr
        exec nam apsit.nam &
	exit 0
        }
#Create nodes byusing looping constructs.
for { set i 0 } { $i < 12} { incr i 1 } {
set n($i) [$ns node]}
#Create links between the nodes
for {set i 0} {$i < 8} {incr i} {
$ns duplex-link $n($i) $n([expr $i+1]) 2.0Mb 10ms DropTail }
$ns duplex-link $n(0) $n(8) 2.0Mb 10ms DropTail
$ns duplex-link $n(1) $n(10) 2.0Mb 10ms DropTail
$ns duplex-link $n(0) $n(9) 2.0Mb 10ms DropTail
$ns duplex-link $n(9) $n(11) 2.0Mb 10ms DropTail
$ns duplex-link $n(10) $n(11) 2.0Mb 10ms DropTail
$ns duplex-link $n(11) $n(5) 2.0Mb 10ms DropTail

#Setup a udp connection 
set udp0 [new Agent/UDP]
$ns attach-agent $n(0) $udp0
#Setup a CBR over UDP connection
set cbr0 [new Application/Traffic/CBR]
$cbr0 set packetSize_ 500
$cbr0 set  interval_ 0.005
$cbr0 attach-agent $udp0
set null0 [new Agent/Null]
$ns attach-agent $n(5) $null0
$ns connect $udp0 $null0

#Setup a TCP connection
set tcp [new Agent/TCP]
$ns attach-agent $n(1) $tcp
set sink [new Agent/TCPSink]
$ns attach-agent $n(5) $sink
$ns connect $tcp $sink

#Setup a FTP over TCP connection
set ftp [new Application/FTP]
$ftp attach-agent $tcp

#Dynamic Routing by using Distance Vector Routing Protocol
$ns rtproto DV 
#Schedule events for the CBR and FTP agents
$ns rtmodel-at 3.0 down $n(11) $n(5)
$ns rtmodel-at 5.0 down $n(7) $n(6)
$ns rtmodel-at 7.0 up $n(11) $n(5)
$ns rtmodel-at 9.0 up $n(7) $n(6)

#Set Flow ID
$udp0 set fid_ 1
$tcp set fid_ 2

#Set Colours to traffic Flows
$ns color 1 Red
$ns color 2 Blue

$ns at 1.0 "$cbr0 start"
$ns at 2.0 "$ftp start"
#Call the finish procedure after 12 seconds of simulation time
$ns at 12 "finish"
#Run the simulation
$ns run








***************************Udp and Tcp*************************
#Create a simulator object
set ns [new Simulator]

#Define different colors for data flows (for NAM)
$ns color 1 Blue
$ns color 2 Red

#Open the NAM trace file
set nf [open out.nam w]
$ns namtrace-all $nf

#Define a 'finish' procedure
proc finish {} {
        global ns nf
        $ns flush-trace
        #Close the NAM trace file
        close $nf
        #Execute NAM on the trace file
        exec nam out.nam &
        exit 0
}

#Create four nodes
set n0 [$ns node]
set n1 [$ns node]
set n2 [$ns node]
set n3 [$ns node]

#Create links between the nodes
$ns duplex-link $n0 $n2 2Mb 10ms DropTail
$ns duplex-link $n1 $n2 2Mb 10ms DropTail
$ns duplex-link $n2 $n3 1.7Mb 20ms DropTail

#Set Queue Size of link (n2-n3) to 10
$ns queue-limit $n2 $n3 10

#Give node position (for NAM)
$ns duplex-link-op $n0 $n2 orient right-down
$ns duplex-link-op $n1 $n2 orient right-up
$ns duplex-link-op $n2 $n3 orient right

#Monitor the queue for link (n2-n3). (for NAM)
$ns duplex-link-op $n2 $n3 queuePos 0.5


#Setup a TCP connection
set tcp [new Agent/TCP]
$tcp set class_ 2
$ns attach-agent $n0 $tcp
set sink [new Agent/TCPSink]
$ns attach-agent $n3 $sink
$ns connect $tcp $sink
$tcp set fid_ 1

#Setup a FTP over TCP connection
set ftp [new Application/FTP]
$ftp attach-agent $tcp
$ftp set type_ FTP


#Setup a UDP connection
set udp [new Agent/UDP]
$ns attach-agent $n1 $udp
set null [new Agent/Null]
$ns attach-agent $n3 $null
$ns connect $udp $null
$udp set fid_ 2

#Setup a CBR over UDP connection
set cbr [new Application/Traffic/CBR]
$cbr attach-agent $udp
$cbr set type_ CBR
$cbr set packet_size_ 1000
$cbr set rate_ 1mb
$cbr set random_ false


#Schedule events for the CBR and FTP agents
$ns at 0.1 "$cbr start"
$ns at 1.0 "$ftp start"
$ns at 4.0 "$ftp stop"
$ns at 4.5 "$cbr stop"

#Detach tcp and sink agents (not really necessary)
$ns at 4.5 "$ns detach-agent $n0 $tcp ; $ns detach-agent $n3 $sink"

#Call the finish procedure after 5 seconds of simulation time
$ns at 5.0 "finish"

#Print CBR packet size and interval
puts "CBR packet size = [$cbr set packet_size_]"
puts "CBR interval = [$cbr set interval_]"

#Run the simulation
$ns run
